import validator from 'validator';

import {
  ALLOWED_EMAIL_DOMAINS,
  MAX_PASSWORD_LENGTH,
  MAX_USERNAME_LENGTH,
  MIN_PASSWORD_LENGTH,
  VALID_PASSWORD_CHARACTERS,
  VALID_USERNAME_CHARACTERS
} from './constants.js';


export function validateSignup(email: string, username: string, password: string): string | null {

  const emailError = isValidEmail(email)

  if (emailError) {
    return emailError;
  }

  const usernameError = isValidUsername(username);

  if (usernameError) {
    return usernameError;
  }

  const passwordError = isValidPassword(password);

  if (passwordError) {
    return passwordError;
  }

  return null;
}

export function validateLogin(username: string, password: string): string | null {

  const usernameError = isValidUsername(username);

  if (usernameError) {
    return usernameError;
  }

  const passwordError = isValidPassword(password);

  if (passwordError) {
    return passwordError;
  }

  return null;
}

export function isValidEmail(email: string): string | null {

  if (!validator.isEmail(email)) {
    return 'Email does not have valid syntax.';
  }

  const domain = email.split('@')[1];

  if (domain && ALLOWED_EMAIL_DOMAINS.includes(domain)) {
    return 'Email's domain is not whitelisted.';
  }

  return null;
}

export function isValidUsername(username: string): string | null {

  if (!VALID_USERNAME_CHARACTERS.test(username)) {
    return `Username must be 1–${MAX_USERNAME_LENGTH} characters. Must contain only alphanumeric characters and: '_', '-'.`
  }

  return null;

}

export function isValidPassword(password: string): string | null {

  if (!VALID_PASSWORD_CHARACTERS.test(password)) {
    return `Password must be ${MIN_PASSWORD_LENGTH}–${MAX_PASSWORD_LENGTH} characters. Must contain only alphanumeric characters and: '!', '@', '#', '$', '_', '-'.`;
  }

  return null;
}